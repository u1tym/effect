# AudioSegment.pyi

from typing import Type
from typing import Self

class AudioSegment:
    frame_rate: int
    channels: int
    sample_width: int
    duration_seconds: float
    dBFS: float

    # def __init__(self, *args, **kwargs) -> None: ...
    def export(self: Self, out_f: str, format: str = ..., bitrate: str = ...) -> None: ...
    def overlay(self: Self, segment: AudioSegment, position: int = ...) -> AudioSegment: ...
    def append(self: Self, segment: AudioSegment, crossfade: int = ...) -> AudioSegment: ...
    def fade_in(self: Self, duration: int) -> AudioSegment: ...
    def fade_out(self: Self, duration: int) -> AudioSegment: ...
    def set_frame_rate(self: Self, frame_rate: int) -> AudioSegment: ...
    def set_channels(self: Self, channels: int) -> AudioSegment: ...

    def apply_gain(self: Self, change_dBFS: float) -> AudioSegment: ...

    @classmethod
    def from_wav(cls: Type[AudioSegment], inputfile: str) -> AudioSegment: ...
